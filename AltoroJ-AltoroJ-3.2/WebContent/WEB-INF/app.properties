####################################################
# This application is for demonstration use only. It contains known application security
# vulnerabilities that were created expressly for demonstrating the functionality of
# application security testing tools. These vulnerabilities may present risks to the
# technical environment in which the application is installed. You must delete and
# uninstall this demonstration application upon completion of the demonstration for
# which it is intended. 
# 
# IBM DISCLAIMS ALL LIABILITY OF ANY KIND RESULTING FROM YOUR USE OF THE APPLICATION
# OR YOUR FAILURE TO DELETE THE APPLICATION FROM YOUR ENVIRONMENT UPON COMPLETION OF
# A DEMONSTRATION. IT IS YOUR RESPONSIBILITY TO DETERMINE IF THE PROGRAM IS APPROPRIATE
# OR SAFE FOR YOUR TECHNICAL ENVIRONMENT. NEVER INSTALL THE APPLICATION IN A PRODUCTION
# ENVIRONMENT. YOU ACKNOWLEDGE AND ACCEPT ALL RISKS ASSOCIATED WITH THE USE OF THE APPLICATION.
#
#IBM AltoroJ
#(c) Copyright IBM Corp. 2008, 2015 All Rights Reserved.
####################################################

# This is an AltoroJ 3.0+ application properties file
# Place it in AltoroJ's WEB-INF folder
# In this file comments are represented by # or // at the start of each line
# Enable those properties you would like to enable by uncommenting them


#################### BEHAVIOR SETTINGS ########################

#### enableAdminFunctions property enables administrative functions in AltoroJ (adding users, changing passwords, etc)
#### WARNING: Enabling this function and then running AppScan on AltoroJ will likely trash the database and make AltoroJ unusable
#### You will need to either manually delete the database every time or enable database.reinitializeOnStart and restart Tomcat

#enableAdminFunctions=true


#### specialLink property changes certain links in AltoroJ (e.g. "Search News Articles" in the authenticated user navigation panel)
#### to the link specified in this property. This allows for demonstrating AppScan's malware detection capabilities
#### WARNING: It is STRONGLY RECOMMENDED that you USE ONLY SITES THAT DO NOT SERVE ACTUAL MALWARE (use other types of undesired sites)

#specialLink=http://www.warez.com


#### advancedStaticPageProcessing property enables advanced file/page lookup using Bash or Command Prompt
#### This exposes AltoroJ to remote command execution and system path traversal
#### WARNING: USE THIS SETTING AT YOUR OWN RISK. USE IT ON PROTECTED SYSTEMS OR IN A VM ONLY ACCESSIBLE FROM THE HOST

#advancedStaticPageProcessing=true


#### enableFeedbackRetention property turns on AltoroJ functionality to store feedback information in its database
### This allows for demonstration of persistent XSS attacks.
#### WARNING: Enabling this function and then running AppScan on AltoroJ will likely trash the database and make AltoroJ unusable
#### You will need to either manually delete the database every time or enable database.reinitializeOnStart and restart Tomcat

#enableFeedbackRetention=true



#################### DATABASE SETTINGS ########################

#### database.alternateDataSource property allows AltoroJ to connect to an external database (e.g. DB2)
#### This property is the name of the data source configured in tomcat's context.xml which contains details for this database connection
#### This will also require adding in the appropriate JDBC driver JAR.
#### See the following URL for more details: https://tomcat.apache.org/tomcat-7.0-doc/jndi-datasource-examples-howto.html
#### IMPORTANT: If you use this property, you must also set database.reinitializeOnStart to true the first time you run AltoroJ
#### and log into the application. This is required to initialize AltoroJ data. You can disable database.reinitializeOnStart afterwards.
#### Failure to use database.reinitializeOnStart=true at least once will cause AltorJ to fail unless you manually create DB contents

#database.alternateDataSource=jdbc/AltoroDB


#### database.reinitializeOnStart setting forces AltoroJ to reinitialize its database every time Tomcat is restarted
#### instead of only initializing it if AltoroJ database does not exist. You MUST use this setting at least once if using an external DB.

#database.reinitializeOnStart=true
